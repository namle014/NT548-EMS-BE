name: CI Pipeline

on:
  push:
    branches:
      - master

jobs:
  checkout:
    name: Checkout code
    runs-on: self-hosted
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set short SHA (image tag)
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  test:
    name: Run Tests
    needs: checkout
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - run: dotnet test ./src/EMS_BE.sln

  sonarqube:
    name: SonarQube Scan
    needs: checkout
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: SonarQube scan
        run: |
          dotnet-sonarscanner begin /k:"${{ vars.SONARQUBE_PROJECT_NAME }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build ./src/EMS_BE.sln
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  trivy:
    name: Trivy Scan
    needs: checkout
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Trivy FS Scan
        run: trivy fs ./src > trivy-fs.txt
      - name: Upload FS scan
        uses: actions/upload-artifact@v4
        with:
          name: trivy-fs
          path: trivy-fs.txt

  build-and-push:
    name: Build and Push Docker Image
    needs: [checkout, test, sonarqube, trivy]
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Clean docker system
        run: docker system prune -af

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ vars.IMAGE_NAME }}:latest
            ${{ vars.IMAGE_NAME }}:${{ needs.checkout.outputs.sha_short }}
          context: ./src

      - name: Trivy image scan
        run: trivy image ${{ vars.IMAGE_NAME }}:${{ needs.checkout.outputs.sha_short }} > trivy-img.txt

      - name: Upload image scan
        uses: actions/upload-artifact@v4
        with:
          name: trivy-img
          path: trivy-img.txt

      - name: Install yq
        run: sudo apt-get update && sudo apt-get install -y yq

      - name: Update image tag in values.yaml
        run: |
          yq -i -y '.image.tag = "${{ needs.checkout.outputs.sha_short }}"' helmchart/ems-be/values.yaml

      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add helmchart/ems-be/values.yaml
          git commit -m "Update image tag to ${{ needs.checkout.outputs.sha_short }} [skip ci]"
          git push origin HEAD:master

  check-db-changes:
    runs-on: self-hosted
    needs: [checkout]

    outputs:
      migration_changed: ${{ steps.filter.outputs.migration }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            migration:
              - 'src/Migration/**'

  db-migration:
    runs-on: self-hosted
    needs: [check-db-changes]
    if: needs.check-db-changes.outputs.migration_changed == 'true'
    env:
      ASPNETCORE_ENVIRONMENT: Production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Apply migration
        run: cd ./src && dotnet ef database update --project OA.Infrastructure.EF --startup-project EMS_BE